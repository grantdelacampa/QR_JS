import { GenerateErrorCode } from './ErrorCorrectionCoding';

describe('ErrorCorrectionCoding', () => {
  test('GenerateErrorCodes', () => {
    const blockInput = [
      '01000000',
      '00100110',
      '00110100',
      '11000110',
      '11110111',
      '00100110',
      '01010110',
      '11010010',
      '00000110',
      '10010111',
      '00000111',
      '00110111',
      '01010110',
      '11010010',
      '00000110',
      '01000110',
      '11110110',
      '11000110',
      '11110111',
      '00100010',
      '00000111',
      '00110110',
      '10010111',
      '01000010',
      '00000110',
      '00010110',
      '11010110',
      '01010111',
      '01000010',
      '11000010',
      '00000110',
      '00110110',
      '11110110',
      '11100111',
      '00110110',
      '01010110',
      '00110111',
      '01000110',
      '01010111',
      '01000111',
      '01010111',
      '00100010',
      '00000110',
      '00010110',
      '01000110',
      '10010111',
      '00000110',
      '10010111',
      '00110110',
      '00110110',
      '10010110',
      '11100110',
      '01110010',
      '00000110',
      '01010110',
      '11000110',
      '10010111',
      '01000010',
      '11000010',
      '00000111',
      '00110110',
      '01010110',
      '01000010',
      '00000110',
      '01000110',
      '11110010',
      '00000110',
      '01010110',
      '10010111',
      '01010111',
      '00110110',
      '11010110',
      '11110110',
      '01000010',
      '00000111',
      '01000110',
      '01010110',
      '11010111',
      '00000110',
      '11110111',
      '00100010',
      '00000110',
      '10010110',
      '11100110',
      '00110110',
      '10010110',
      '01000110',
      '10010110',
      '01000111',
      '01010110',
      '11100111',
      '01000010',
      '00000111',
      '01010111',
      '01000010',
      '00000110',
      '11000110',
      '00010110',
      '00100110',
      '11110111',
      '00100110',
      '01010010',
      '00000110',
      '01010111',
      '01000010',
      '00000110',
      '01000110'
    ];
    const errCodeCnt = 28;
    const generatedCodeWords = GenerateErrorCode(blockInput, errCodeCnt);
    expect(generatedCodeWords).toHaveLength(errCodeCnt);
    expect(generatedCodeWords).toStrictEqual([
      '00101101',
      '10000010',
      '10101101',
      '00010011',
      '10100110',
      '01000001',
      '11001111',
      '10011001',
      '10101101',
      '10100100',
      '11001101',
      '10011110',
      '01101110',
      '11011010',
      '10011111',
      '00111110',
      '01011001',
      '01011001',
      '10001101',
      '00111000',
      '11000101',
      '11100101',
      '11100111',
      '00000010',
      '10100001',
      '00111010',
      '11001110',
      '00111000'
    ]);
  });
});
